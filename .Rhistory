# Create a vector of means
mean_vec <- rep(mean(activity$steps, na.rm=TRUE), times=length(na_pos))
# Compute the total number of steps each day (NA values removed)
sum_data <- aggregate(activity$steps, by=list(activity$date), FUN=sum)
# Rename the attributes
names(sum_data) <- c("date", "total")
# Compute the histogram of the total number of steps each day
hist(sum_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="blue",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day\n(NA replaced by mean value)")
mean(sum_data$total)
median(sum_data$total)
##Are there differences in activity patterns between weekdays and weekends?
library(lattice)
# Compute the average number of steps taken, averaged across all daytype variable
mean_data <- aggregate(activity$steps,
by=list(activity$daytype,
activity$weekday, activity$interval), mean)
# Rename the attributes
names(mean_data) <- c("daytype", "weekday", "interval", "mean")
# Compute the time serie plot
xyplot(mean ~ interval | daytype, mean_data,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
# Clear the workspace
rm(list=ls())
# Load the raw activity data
activity_raw <- read.csv("C:/Users/Justin/Documents/peer_assesment_1/activity.csv", colClasses = c("numeric", "character","numeric"))
# Transform the date attribute to an actual date format
activity_raw$date <- as.POSIXct(activity_raw$date, format="%Y-%m-%d")
# Compute the weekdays from the date attribute
activity_raw <- data.frame(date=activity_raw$date,
weekday=tolower(weekdays(activity_raw$date)),
steps=activity_raw$steps,
interval=activity_raw$interval)
# Compute the day type (weekend or weekday)
activity_raw <- cbind(activity_raw,
daytype=ifelse(activity_raw$weekday == "saturday" |
activity_raw$weekday == "sunday", "weekend",
"weekday"))
# Create the final data.frame
activity <- data.frame(date=activity_raw$date,
weekday=activity_raw$weekday,
daytype=activity_raw$daytype,
interval=activity_raw$interval,
steps=activity_raw$steps)
##Question 2: What is mean total number of steps taken per day?
# Compute the total number of steps each day (NA values removed)
sum_data <- aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
names(sum_data) <- c("date", "total")
# Compute the histogram of the total number of steps each day
hist(sum_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="blue",
xlab="Total number of steps",
ylim=c(0, 20),
main="Histogram of the total number of steps taken each day")
mean(sum_data$total)
median(sum_data$total)
##Question 3: What is the average daily activity pattern?
# Compute the means of steps accross all days for each interval
mean_data <- aggregate(activity$steps,
by=list(activity$interval),
FUN=mean,
na.rm=TRUE)
# Rename the attributes
names(mean_data) <- c("interval", "mean")
# Compute the time series plot
plot(mean_data$interval,
mean_data$mean,
type="l",
col="blue",
lwd=2,
xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals")
# We find the position of the maximum mean
max_pos <- which(mean_data$mean == max(mean_data$mean))
# We lookup the value of interval at this position
max_interval <- mean_data[max_pos, 1]
##Question 4: Inputing missing values
NA_count <- sum(is.na(activity$steps))
# Find the NA positions
na_pos <- which(is.na(activity$steps))
# Create a vector of means
mean_vec <- rep(mean(activity$steps, na.rm=TRUE), times=length(na_pos))
# Compute the total number of steps each day (NA values removed)
sum_data <- aggregate(activity$steps, by=list(activity$date), FUN=sum)
# Rename the attributes
names(sum_data) <- c("date", "total")
# Compute the histogram of the total number of steps each day
hist(sum_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="blue",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day\n(NA replaced by mean value)")
mean(sum_data$total, na.rm = TRUE)
median(sum_data$total, na.rm = TRUE)
##Are there differences in activity patterns between weekdays and weekends?
library(lattice)
# Compute the average number of steps taken, averaged across all daytype variable
mean_data <- aggregate(activity$steps,
by=list(activity$daytype,
activity$weekday, activity$interval), mean)
# Rename the attributes
names(mean_data) <- c("daytype", "weekday", "interval", "mean")
# Compute the time serie plot
xyplot(mean ~ interval | daytype, mean_data,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
# Clear the workspace
rm(list=ls())
# Load the raw activity data
activity_raw <- read.csv("C:/Users/Justin/Documents/peer_assesment_1/activity.csv", colClasses = c("numeric", "character","numeric"))
# Transform the date attribute to an actual date format
activity_raw$date <- as.POSIXct(activity_raw$date, format="%Y-%m-%d")
# Compute the weekdays from the date attribute
activity_raw <- data.frame(date=activity_raw$date,
weekday=tolower(weekdays(activity_raw$date)),
steps=activity_raw$steps,
interval=activity_raw$interval)
# Compute the day type (weekend or weekday)
activity_raw <- cbind(activity_raw,
daytype=ifelse(activity_raw$weekday == "saturday" |
activity_raw$weekday == "sunday", "weekend",
"weekday"))
# Create the final data.frame
activity <- data.frame(date=activity_raw$date,
weekday=activity_raw$weekday,
daytype=activity_raw$daytype,
interval=activity_raw$interval,
steps=activity_raw$steps)
##Question 2: What is mean total number of steps taken per day?
# Compute the total number of steps each day (NA values removed)
sum_data <- aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
names(sum_data) <- c("date", "total")
# Compute the histogram of the total number of steps each day
hist(sum_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="blue",
xlab="Total number of steps",
ylim=c(0, 20),
main="Histogram of the total number of steps taken each day")
mean(sum_data$total)
median(sum_data$total)
##Question 3: What is the average daily activity pattern?
# Compute the means of steps accross all days for each interval
mean_data <- aggregate(activity$steps,
by=list(activity$interval),
FUN=mean,
na.rm=TRUE)
# Rename the attributes
names(mean_data) <- c("interval", "mean")
# Compute the time series plot
plot(mean_data$interval,
mean_data$mean,
type="l",
col="blue",
lwd=2,
xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals")
# We find the position of the maximum mean
max_pos <- which(mean_data$mean == max(mean_data$mean))
# We lookup the value of interval at this position
max_interval <- mean_data[max_pos, 1]
##Question 4: Inputing missing values
NA_count <- sum(is.na(activity$steps))
# Find the NA positions
na_pos <- which(is.na(activity$steps))
# Create a vector of means
mean_vec <- rep(mean(activity$steps, na.rm=TRUE), times=length(na_pos))
# Compute the total number of steps each day (NA values removed)
sum_data <- aggregate(activity$steps, by=list(activity$date), FUN=sum)
# Rename the attributes
names(sum_data) <- c("date", "total")
# Compute the histogram of the total number of steps each day
hist(sum_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="blue",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day\n(NA replaced by mean value)")
mean(sum_data$total, na.rm = TRUE)
median(sum_data$total, na.rm = TRUE)
##Are there differences in activity patterns between weekdays and weekends?
library(lattice)
# Compute the average number of steps taken, averaged across all daytype variable
mean_data <- aggregate(activity$steps,
by=list(activity$daytype,
activity$weekday, activity$interval), mean)
# Rename the attributes
names(mean_data) <- c("daytype", "weekday", "interval", "mean")
# Compute the time serie plot
xyplot(mean ~ interval | daytype, mean_data,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
# Clear the workspace
rm(list=ls())
# Load the raw activity data
activity_raw <- read.csv("C:/Users/Justin/Documents/peer_assesment_1/activity.csv", colClasses = c("numeric", "character","numeric"))
# Transform the date attribute to an actual date format
activity_raw$date <- as.POSIXct(activity_raw$date, format="%Y-%m-%d")
# Compute the weekdays from the date attribute
activity_raw <- data.frame(date=activity_raw$date,
weekday=tolower(weekdays(activity_raw$date)),
steps=activity_raw$steps,
interval=activity_raw$interval)
# Compute the day type (weekend or weekday)
activity_raw <- cbind(activity_raw,
daytype=ifelse(activity_raw$weekday == "saturday" |
activity_raw$weekday == "sunday", "weekend",
"weekday"))
# Create the final data.frame
activity <- data.frame(date=activity_raw$date,
weekday=activity_raw$weekday,
daytype=activity_raw$daytype,
interval=activity_raw$interval,
steps=activity_raw$steps)
##Question 2: What is mean total number of steps taken per day?
# Compute the total number of steps each day (NA values removed)
sum_data <- aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
names(sum_data) <- c("date", "total")
# Compute the histogram of the total number of steps each day
hist(sum_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="blue",
xlab="Total number of steps",
ylim=c(0, 20),
main="Histogram of the total number of steps taken each day")
mean(sum_data$total)
median(sum_data$total)
##Question 3: What is the average daily activity pattern?
# Compute the means of steps accross all days for each interval
mean_data <- aggregate(activity$steps,
by=list(activity$interval),
FUN=mean,
na.rm=TRUE)
# Rename the attributes
names(mean_data) <- c("interval", "mean")
# Compute the time series plot
plot(mean_data$interval,
mean_data$mean,
type="l",
col="blue",
lwd=2,
xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals")
# We find the position of the maximum mean
max_pos <- which(mean_data$mean == max(mean_data$mean))
# We lookup the value of interval at this position
max_interval <- mean_data[max_pos, 1]
##Question 4: Inputing missing values
NA_count <- sum(is.na(activity$steps))
# Find the NA positions
na_pos <- which(is.na(activity$steps))
# Create a vector of means
mean_vec <- rep(mean(activity$steps, na.rm=TRUE), times=length(na_pos))
# Compute the total number of steps each day (NA values removed)
sum_data <- aggregate(activity$steps, by=list(activity$date), FUN=sum)
# Rename the attributes
names(sum_data) <- c("date", "total")
# Compute the histogram of the total number of steps each day
hist(sum_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="blue",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day\n(NA replaced by mean value)")
mean(sum_data$total, na.rm = TRUE)
median(sum_data$total, na.rm = TRUE)
##Are there differences in activity patterns between weekdays and weekends?
library(lattice)
# Compute the average number of steps taken, averaged across all daytype variable
mean_data <- aggregate(activity$steps,
by=list(activity$daytype,
activity$weekday, activity$interval), mean)
# Rename the attributes
names(mean_data) <- c("daytype", "weekday", "interval", "mean")
# Compute the time serie plot
xyplot(mean ~ interval | daytype, data = mean_data,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
View(mean_data)
# Clear the workspace
rm(list=ls())
# Load the raw activity data
activity_raw <- read.csv("C:/Users/Justin/Documents/peer_assesment_1/activity.csv", colClasses = c("numeric", "character","numeric"))
# Transform the date attribute to an actual date format
activity_raw$date <- as.POSIXct(activity_raw$date, format="%Y-%m-%d")
# Compute the weekdays from the date attribute
activity_raw <- data.frame(date=activity_raw$date,
weekday=tolower(weekdays(activity_raw$date)),
steps=activity_raw$steps,
interval=activity_raw$interval)
# Compute the day type (weekend or weekday)
activity_raw <- cbind(activity_raw,
daytype=ifelse(activity_raw$weekday == "saturday" |
activity_raw$weekday == "sunday", "weekend",
"weekday"))
# Create the final data.frame
activity <- data.frame(date=activity_raw$date,
weekday=activity_raw$weekday,
daytype=activity_raw$daytype,
interval=activity_raw$interval,
steps=activity_raw$steps)
##Question 2: What is mean total number of steps taken per day?
# Compute the total number of steps each day (NA values removed)
sum_data <- aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
names(sum_data) <- c("date", "total")
# Compute the histogram of the total number of steps each day
hist(sum_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="blue",
xlab="Total number of steps",
ylim=c(0, 20),
main="Histogram of the total number of steps taken each day")
mean(sum_data$total)
median(sum_data$total)
##Question 3: What is the average daily activity pattern?
# Compute the means of steps accross all days for each interval
mean_data <- aggregate(activity$steps,
by=list(activity$interval),
FUN=mean,
na.rm=TRUE)
# Rename the attributes
names(mean_data) <- c("interval", "mean")
# Compute the time series plot
plot(mean_data$interval,
mean_data$mean,
type="l",
col="blue",
lwd=2,
xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals")
# We find the position of the maximum mean
max_pos <- which(mean_data$mean == max(mean_data$mean))
# We lookup the value of interval at this position
max_interval <- mean_data[max_pos, 1]
##Question 4: Inputing missing values
NA_count <- sum(is.na(activity$steps))
# Find the NA positions
na_pos <- which(is.na(activity$steps))
# Create a vector of means
mean_vec <- rep(mean(activity$steps, na.rm=TRUE), times=length(na_pos))
# Compute the total number of steps each day (NA values removed)
sum_data <- aggregate(activity$steps, by=list(activity$date), FUN=sum)
# Rename the attributes
names(sum_data) <- c("date", "total")
# Compute the histogram of the total number of steps each day
hist(sum_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="blue",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day\n(NA replaced by mean value)")
mean(sum_data$total, na.rm = TRUE)
median(sum_data$total, na.rm = TRUE)
##Are there differences in activity patterns between weekdays and weekends?
library(lattice)
# Compute the average number of steps taken, averaged across all daytype variable
mean_data <- aggregate(activity$steps,
by=list(activity$daytype,
activity$weekday, activity$interval), mean, na.rm = TRUE)
# Rename the attributes
names(mean_data) <- c("daytype", "weekday", "interval", "mean")
# Compute the time serie plot
xyplot(mean ~ interval | daytype, data = mean_data,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
library(knitr)
opts_chunk$set(echo = TRUE, results = 'hold')
# Clear the workspace
rm(list=ls())
# Load the raw activity data
activity_raw <- read.csv("C:/Users/Justin/Documents/peer_assesment_1/activity.csv", colClasses = c("numeric", "character","numeric"))
# Transform the date attribute to an actual date format
activity_raw$date <- as.POSIXct(activity_raw$date, format="%Y-%m-%d")
# Compute the weekdays from the date attribute
activity_raw <- data.frame(date=activity_raw$date,
weekday=tolower(weekdays(activity_raw$date)),
steps=activity_raw$steps,
interval=activity_raw$interval)
# Compute the day type (weekend or weekday)
activity_raw <- cbind(activity_raw,
daytype=ifelse(activity_raw$weekday == "saturday" |
activity_raw$weekday == "sunday", "weekend",
"weekday"))
# Create the final data.frame
activity <- data.frame(date=activity_raw$date,
weekday=activity_raw$weekday,
daytype=activity_raw$daytype,
interval=activity_raw$interval,
steps=activity_raw$steps)
##Question 2: What is mean total number of steps taken per day?
# Compute the total number of steps each day (NA values removed)
sum_data <- aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
names(sum_data) <- c("date", "total")
# Compute the histogram of the total number of steps each day
hist(sum_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="blue",
xlab="Total number of steps",
ylim=c(0, 20),
main="Histogram of the total number of steps taken each day")
mean(sum_data$total)
median(sum_data$total)
##Question 3: What is the average daily activity pattern?
# Compute the means of steps accross all days for each interval
mean_data <- aggregate(activity$steps,
by=list(activity$interval),
FUN=mean,
na.rm=TRUE)
# Rename the attributes
names(mean_data) <- c("interval", "mean")
# Compute the time series plot
plot(mean_data$interval,
mean_data$mean,
type="l",
col="blue",
lwd=2,
xlab="Interval [minutes]",
ylab="Average number of steps",
main="Time-series of the average number of steps per intervals")
# We find the position of the maximum mean
max_pos <- which(mean_data$mean == max(mean_data$mean))
# We lookup the value of interval at this position
max_interval <- mean_data[max_pos, 1]
##Question 4: Inputing missing values
NA_count <- sum(is.na(activity$steps))
# Find the NA positions
na_pos <- which(is.na(activity$steps))
# Create a vector of means
mean_vec <- rep(mean(activity$steps, na.rm=TRUE), times=length(na_pos))
# Compute the total number of steps each day (NA values removed)
sum_data <- aggregate(activity$steps, by=list(activity$date), FUN=sum)
# Rename the attributes
names(sum_data) <- c("date", "total")
# Compute the histogram of the total number of steps each day
hist(sum_data$total,
breaks=seq(from=0, to=25000, by=2500),
col="blue",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day\n(NA replaced by mean value)")
mean(sum_data$total, na.rm = TRUE)
median(sum_data$total, na.rm = TRUE)
##Are there differences in activity patterns between weekdays and weekends?
library(lattice)
# Compute the average number of steps taken, averaged across all daytype variable
mean_data <- aggregate(activity$steps,
by=list(activity$daytype,
activity$weekday, activity$interval), mean, na.rm = TRUE)
# Rename the attributes
names(mean_data) <- c("daytype", "weekday", "interval", "mean")
# Compute the time serie plot
xyplot(mean ~ interval | daytype, data = mean_data,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
knit2html(peer_1_activity.R)
install.packages
install.packages(knitr)
install.packages("knitr")
library(knitr)
knit2html(peer_1_activity.R)
knit2html("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
install.packages("rmarkdown")
rmarkdown::render("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
stitch("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
rmarkdown::render("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
knitr::spin("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
setwd("C:/Users/Justin/Documents/peer_assesment_1")
knitr::spin("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
?markdown
rendermarkdown("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R"")
)
rendermarkdown("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
install.packages("Sundown")
markdown("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
markdown::("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
markdown::Rmd("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
markdown::html("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
markdownToHTML("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.R")
?knitr
install.packages("Shiny")
install.packages("hiny")
install.packages("shiny")
knitr::spin("C:/Users/Justin/Documents/peer_assesment_1/peer_1_activity.md")
